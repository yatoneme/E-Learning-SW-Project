package com.elearning.www._1_2_MySql_DB_entities;
// Generated Apr 26, 2025 12:43:29 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Instructor generated by hbm2java
 */
@Entity
@Table(name="instructor"
    ,catalog="elearning"
    , uniqueConstraints = {@UniqueConstraint(columnNames="business_email"), @UniqueConstraint(columnNames="instructor_email"), @UniqueConstraint(columnNames="instructor_id"), @UniqueConstraint(columnNames="paypal_email")} 
)
public class Instructor  implements java.io.Serializable {


     private InstructorId id;
     private Applications applications;
     private String instructorEmail;
     private String firstName;
     private String middleName;
     private String lastName;
     private String country;
     private Date birthdate;
     private String gender;
     private byte accountStatus;
     private String password;
     private String businessEmail;
     private String speciality;
     private String paypalEmail;
     private Set<Course> courses = new HashSet<Course>(0);
     private Set<QuestionsCreated> questionsCreateds = new HashSet<QuestionsCreated>(0);
     private Set<AcademicAchievements> academicAchievementses = new HashSet<AcademicAchievements>(0);

    public Instructor() {
    }

	
    public Instructor(InstructorId id, Applications applications, String instructorEmail, String firstName, String middleName, String lastName, String country, Date birthdate, String gender, byte accountStatus, String password, String speciality, String paypalEmail) {
        this.id = id;
        this.applications = applications;
        this.instructorEmail = instructorEmail;
        this.firstName = firstName;
        this.middleName = middleName;
        this.lastName = lastName;
        this.country = country;
        this.birthdate = birthdate;
        this.gender = gender;
        this.accountStatus = accountStatus;
        this.password = password;
        this.speciality = speciality;
        this.paypalEmail = paypalEmail;
    }
    public Instructor(InstructorId id, Applications applications, String instructorEmail, String firstName, String middleName, String lastName, String country, Date birthdate, String gender, byte accountStatus, String password, String businessEmail, String speciality, String paypalEmail, Set<Course> courses, Set<QuestionsCreated> questionsCreateds, Set<AcademicAchievements> academicAchievementses) {
       this.id = id;
       this.applications = applications;
       this.instructorEmail = instructorEmail;
       this.firstName = firstName;
       this.middleName = middleName;
       this.lastName = lastName;
       this.country = country;
       this.birthdate = birthdate;
       this.gender = gender;
       this.accountStatus = accountStatus;
       this.password = password;
       this.businessEmail = businessEmail;
       this.speciality = speciality;
       this.paypalEmail = paypalEmail;
       this.courses = courses;
       this.questionsCreateds = questionsCreateds;
       this.academicAchievementses = academicAchievementses;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="instructorId", column=@Column(name="instructor_id", unique=true, nullable=false) ), 
        @AttributeOverride(name="applicationId", column=@Column(name="application_id", nullable=false) ) } )
    public InstructorId getId() {
        return this.id;
    }
    
    public void setId(InstructorId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="application_id", nullable=false, insertable=false, updatable=false)
    public Applications getApplications() {
        return this.applications;
    }
    
    public void setApplications(Applications applications) {
        this.applications = applications;
    }

    
    @Column(name="instructor_email", unique=true, nullable=false, length=120)
    public String getInstructorEmail() {
        return this.instructorEmail;
    }
    
    public void setInstructorEmail(String instructorEmail) {
        this.instructorEmail = instructorEmail;
    }

    
    @Column(name="first_name", nullable=false)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="middle_name", nullable=false)
    public String getMiddleName() {
        return this.middleName;
    }
    
    public void setMiddleName(String middleName) {
        this.middleName = middleName;
    }

    
    @Column(name="last_name", nullable=false)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="country", nullable=false)
    public String getCountry() {
        return this.country;
    }
    
    public void setCountry(String country) {
        this.country = country;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="birthdate", nullable=false, length=10)
    public Date getBirthdate() {
        return this.birthdate;
    }
    
    public void setBirthdate(Date birthdate) {
        this.birthdate = birthdate;
    }

    
    @Column(name="gender", nullable=false, length=6)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    
    @Column(name="account_status", nullable=false)
    public byte getAccountStatus() {
        return this.accountStatus;
    }
    
    public void setAccountStatus(byte accountStatus) {
        this.accountStatus = accountStatus;
    }

    
    @Column(name="password", nullable=false, length=20)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="business_email", unique=true, length=120)
    public String getBusinessEmail() {
        return this.businessEmail;
    }
    
    public void setBusinessEmail(String businessEmail) {
        this.businessEmail = businessEmail;
    }

    
    @Column(name="speciality", nullable=false)
    public String getSpeciality() {
        return this.speciality;
    }
    
    public void setSpeciality(String speciality) {
        this.speciality = speciality;
    }

    
    @Column(name="paypal_email", unique=true, nullable=false, length=120)
    public String getPaypalEmail() {
        return this.paypalEmail;
    }
    
    public void setPaypalEmail(String paypalEmail) {
        this.paypalEmail = paypalEmail;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="instructor")
    public Set<Course> getCourses() {
        return this.courses;
    }
    
    public void setCourses(Set<Course> courses) {
        this.courses = courses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="instructor")
    public Set<QuestionsCreated> getQuestionsCreateds() {
        return this.questionsCreateds;
    }
    
    public void setQuestionsCreateds(Set<QuestionsCreated> questionsCreateds) {
        this.questionsCreateds = questionsCreateds;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="instructor")
    public Set<AcademicAchievements> getAcademicAchievementses() {
        return this.academicAchievementses;
    }
    
    public void setAcademicAchievementses(Set<AcademicAchievements> academicAchievementses) {
        this.academicAchievementses = academicAchievementses;
    }




}


