package com.elearning.www._1_2_MySql_DB_entities;
// Generated Apr 26, 2025 12:43:29 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name="course"
    ,catalog="elearning"
)
public class Course  implements java.io.Serializable {


     private int courseId;
     private Instructor instructor;
     private String title;
     private String difficulty;
     private String description;
     private byte courseStatus;
     private short estimatedTime;
     private String coursecol;
     private Set<Module> modules = new HashSet<Module>(0);
     private Set<Coursefeeshistory> coursefeeshistories = new HashSet<Coursefeeshistory>(0);
     private Set<Enrollment> enrollments = new HashSet<Enrollment>(0);
     private Set<Categories> categorieses = new HashSet<Categories>(0);
     private Set<QuestionsCreated> questionsCreateds = new HashSet<QuestionsCreated>(0);

    public Course() {
    }

	
    public Course(int courseId, Instructor instructor, String title, String difficulty, String description, byte courseStatus, short estimatedTime) {
        this.courseId = courseId;
        this.instructor = instructor;
        this.title = title;
        this.difficulty = difficulty;
        this.description = description;
        this.courseStatus = courseStatus;
        this.estimatedTime = estimatedTime;
    }
    public Course(int courseId, Instructor instructor, String title, String difficulty, String description, byte courseStatus, short estimatedTime, String coursecol, Set<Module> modules, Set<Coursefeeshistory> coursefeeshistories, Set<Enrollment> enrollments, Set<Categories> categorieses, Set<QuestionsCreated> questionsCreateds) {
       this.courseId = courseId;
       this.instructor = instructor;
       this.title = title;
       this.difficulty = difficulty;
       this.description = description;
       this.courseStatus = courseStatus;
       this.estimatedTime = estimatedTime;
       this.coursecol = coursecol;
       this.modules = modules;
       this.coursefeeshistories = coursefeeshistories;
       this.enrollments = enrollments;
       this.categorieses = categorieses;
       this.questionsCreateds = questionsCreateds;
    }
   
     @Id 

    
    @Column(name="course_id", unique=true, nullable=false)
    public int getCourseId() {
        return this.courseId;
    }
    
    public void setCourseId(int courseId) {
        this.courseId = courseId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="instructor_id", referencedColumnName="instructor_id", nullable=false), 
        @JoinColumn(name="application_id", referencedColumnName="application_id") } )
    public Instructor getInstructor() {
        return this.instructor;
    }
    
    public void setInstructor(Instructor instructor) {
        this.instructor = instructor;
    }

    
    @Column(name="title", nullable=false)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

    
    @Column(name="difficulty", nullable=false)
    public String getDifficulty() {
        return this.difficulty;
    }
    
    public void setDifficulty(String difficulty) {
        this.difficulty = difficulty;
    }

    
    @Column(name="description", nullable=false, length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="course_status", nullable=false)
    public byte getCourseStatus() {
        return this.courseStatus;
    }
    
    public void setCourseStatus(byte courseStatus) {
        this.courseStatus = courseStatus;
    }

    
    @Column(name="estimated_time", nullable=false)
    public short getEstimatedTime() {
        return this.estimatedTime;
    }
    
    public void setEstimatedTime(short estimatedTime) {
        this.estimatedTime = estimatedTime;
    }

    
    @Column(name="coursecol", length=45)
    public String getCoursecol() {
        return this.coursecol;
    }
    
    public void setCoursecol(String coursecol) {
        this.coursecol = coursecol;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="course")
    public Set<Module> getModules() {
        return this.modules;
    }
    
    public void setModules(Set<Module> modules) {
        this.modules = modules;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="course")
    public Set<Coursefeeshistory> getCoursefeeshistories() {
        return this.coursefeeshistories;
    }
    
    public void setCoursefeeshistories(Set<Coursefeeshistory> coursefeeshistories) {
        this.coursefeeshistories = coursefeeshistories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="course")
    public Set<Enrollment> getEnrollments() {
        return this.enrollments;
    }
    
    public void setEnrollments(Set<Enrollment> enrollments) {
        this.enrollments = enrollments;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="course_categories", catalog="elearning", joinColumns = { 
        @JoinColumn(name="course_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="category_id", nullable=false, updatable=false) })
    public Set<Categories> getCategorieses() {
        return this.categorieses;
    }
    
    public void setCategorieses(Set<Categories> categorieses) {
        this.categorieses = categorieses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="course")
    public Set<QuestionsCreated> getQuestionsCreateds() {
        return this.questionsCreateds;
    }
    
    public void setQuestionsCreateds(Set<QuestionsCreated> questionsCreateds) {
        this.questionsCreateds = questionsCreateds;
    }




}


