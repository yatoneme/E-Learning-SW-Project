package com.elearning.www._1_2_MySql_DB_entities;
// Generated Apr 26, 2025 12:43:29 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name="order"
    ,catalog="elearning"
    , uniqueConstraints = {@UniqueConstraint(columnNames="admin_transaction_paypal_id"), @UniqueConstraint(columnNames="instructor_transaction_paypal_id")} 
)
public class Order  implements java.io.Serializable {


     private int orderId;
     private String instructorTransactionPaypalId;
     private String adminTransactionPaypalId;
     private Date paymentDate;
     private Integer pointsSpent;
     private BigDecimal totalAmount;
     private int pointsAdded;
     private Set<Enrollment> enrollments = new HashSet<Enrollment>(0);

    public Order() {
    }

	
    public Order(int orderId, String instructorTransactionPaypalId, String adminTransactionPaypalId, Date paymentDate, BigDecimal totalAmount, int pointsAdded) {
        this.orderId = orderId;
        this.instructorTransactionPaypalId = instructorTransactionPaypalId;
        this.adminTransactionPaypalId = adminTransactionPaypalId;
        this.paymentDate = paymentDate;
        this.totalAmount = totalAmount;
        this.pointsAdded = pointsAdded;
    }
    public Order(int orderId, String instructorTransactionPaypalId, String adminTransactionPaypalId, Date paymentDate, Integer pointsSpent, BigDecimal totalAmount, int pointsAdded, Set<Enrollment> enrollments) {
       this.orderId = orderId;
       this.instructorTransactionPaypalId = instructorTransactionPaypalId;
       this.adminTransactionPaypalId = adminTransactionPaypalId;
       this.paymentDate = paymentDate;
       this.pointsSpent = pointsSpent;
       this.totalAmount = totalAmount;
       this.pointsAdded = pointsAdded;
       this.enrollments = enrollments;
    }
   
     @Id 

    
    @Column(name="order_id", unique=true, nullable=false)
    public int getOrderId() {
        return this.orderId;
    }
    
    public void setOrderId(int orderId) {
        this.orderId = orderId;
    }

    
    @Column(name="instructor_transaction_paypal_id", unique=true, nullable=false, length=20)
    public String getInstructorTransactionPaypalId() {
        return this.instructorTransactionPaypalId;
    }
    
    public void setInstructorTransactionPaypalId(String instructorTransactionPaypalId) {
        this.instructorTransactionPaypalId = instructorTransactionPaypalId;
    }

    
    @Column(name="admin_transaction_paypal_id", unique=true, nullable=false, length=20)
    public String getAdminTransactionPaypalId() {
        return this.adminTransactionPaypalId;
    }
    
    public void setAdminTransactionPaypalId(String adminTransactionPaypalId) {
        this.adminTransactionPaypalId = adminTransactionPaypalId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="payment_date", nullable=false, length=19)
    public Date getPaymentDate() {
        return this.paymentDate;
    }
    
    public void setPaymentDate(Date paymentDate) {
        this.paymentDate = paymentDate;
    }

    
    @Column(name="points_spent")
    public Integer getPointsSpent() {
        return this.pointsSpent;
    }
    
    public void setPointsSpent(Integer pointsSpent) {
        this.pointsSpent = pointsSpent;
    }

    
    @Column(name="total_amount", nullable=false, precision=9)
    public BigDecimal getTotalAmount() {
        return this.totalAmount;
    }
    
    public void setTotalAmount(BigDecimal totalAmount) {
        this.totalAmount = totalAmount;
    }

    
    @Column(name="points_added", nullable=false)
    public int getPointsAdded() {
        return this.pointsAdded;
    }
    
    public void setPointsAdded(int pointsAdded) {
        this.pointsAdded = pointsAdded;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="order")
    public Set<Enrollment> getEnrollments() {
        return this.enrollments;
    }
    
    public void setEnrollments(Set<Enrollment> enrollments) {
        this.enrollments = enrollments;
    }




}


