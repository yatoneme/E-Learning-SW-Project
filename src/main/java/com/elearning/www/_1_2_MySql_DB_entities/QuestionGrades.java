package com.elearning.www._1_2_MySql_DB_entities;
// Generated Apr 26, 2025 12:43:29 PM by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * QuestionGrades generated by hbm2java
 */
@Entity
@Table(name="question_grades"
    ,catalog="elearning"
)
public class QuestionGrades  implements java.io.Serializable {


     private QuestionGradesId id;
     private ExaminedOn examinedOn;
     private QuestionChoices questionChoices;
     private short grade;

    public QuestionGrades() {
    }

    public QuestionGrades(QuestionGradesId id, ExaminedOn examinedOn, QuestionChoices questionChoices, short grade) {
       this.id = id;
       this.examinedOn = examinedOn;
       this.questionChoices = questionChoices;
       this.grade = grade;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="sectionId", column=@Column(name="section_id", nullable=false) ), 
        @AttributeOverride(name="studentId", column=@Column(name="student_id", nullable=false) ), 
        @AttributeOverride(name="questionIndex", column=@Column(name="question_index", nullable=false) ), 
        @AttributeOverride(name="attemptNo", column=@Column(name="attempt_no", nullable=false) ) } )
    public QuestionGradesId getId() {
        return this.id;
    }
    
    public void setId(QuestionGradesId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="attempt_no", referencedColumnName="attempt_no", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="section_id", referencedColumnName="section_id", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="student_id", referencedColumnName="student_id", nullable=false, insertable=false, updatable=false) } )
    public ExaminedOn getExaminedOn() {
        return this.examinedOn;
    }
    
    public void setExaminedOn(ExaminedOn examinedOn) {
        this.examinedOn = examinedOn;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="choice_index", referencedColumnName="choice_index", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="question_index", referencedColumnName="question_index", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="section_id", referencedColumnName="section_id", nullable=false, insertable=false, updatable=false) } )
    public QuestionChoices getQuestionChoices() {
        return this.questionChoices;
    }
    
    public void setQuestionChoices(QuestionChoices questionChoices) {
        this.questionChoices = questionChoices;
    }

    
    @Column(name="grade", nullable=false)
    public short getGrade() {
        return this.grade;
    }
    
    public void setGrade(short grade) {
        this.grade = grade;
    }




}


