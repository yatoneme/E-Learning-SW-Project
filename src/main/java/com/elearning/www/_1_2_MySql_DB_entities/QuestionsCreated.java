package com.elearning.www._1_2_MySql_DB_entities;
// Generated Apr 26, 2025 12:43:29 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * QuestionsCreated generated by hbm2java
 */
@Entity
@Table(name="questions_created"
    ,catalog="elearning"
)
public class QuestionsCreated  implements java.io.Serializable {


     private QuestionsCreatedId id;
     private Course course;
     private Instructor instructor;
     private Section section;
     private String question;
     private float QWeight;
     private Set<QuestionChoices> questionChoiceses = new HashSet<QuestionChoices>(0);

    public QuestionsCreated() {
    }

	
    public QuestionsCreated(QuestionsCreatedId id, Course course, Instructor instructor, Section section, String question, float QWeight) {
        this.id = id;
        this.course = course;
        this.instructor = instructor;
        this.section = section;
        this.question = question;
        this.QWeight = QWeight;
    }
    public QuestionsCreated(QuestionsCreatedId id, Course course, Instructor instructor, Section section, String question, float QWeight, Set<QuestionChoices> questionChoiceses) {
       this.id = id;
       this.course = course;
       this.instructor = instructor;
       this.section = section;
       this.question = question;
       this.QWeight = QWeight;
       this.questionChoiceses = questionChoiceses;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="questionIndex", column=@Column(name="question_index", nullable=false) ), 
        @AttributeOverride(name="sectionId", column=@Column(name="section_id", nullable=false) ) } )
    public QuestionsCreatedId getId() {
        return this.id;
    }
    
    public void setId(QuestionsCreatedId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="course_id", nullable=false)
    public Course getCourse() {
        return this.course;
    }
    
    public void setCourse(Course course) {
        this.course = course;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="instructor_id", referencedColumnName="instructor_id", nullable=false), 
        @JoinColumn(name="application_id", referencedColumnName="application_id") } )
    public Instructor getInstructor() {
        return this.instructor;
    }
    
    public void setInstructor(Instructor instructor) {
        this.instructor = instructor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="section_id", nullable=false, insertable=false, updatable=false)
    public Section getSection() {
        return this.section;
    }
    
    public void setSection(Section section) {
        this.section = section;
    }

    
    @Column(name="question", nullable=false, length=65535)
    public String getQuestion() {
        return this.question;
    }
    
    public void setQuestion(String question) {
        this.question = question;
    }

    
    @Column(name="q_weight", nullable=false, precision=5)
    public float getQWeight() {
        return this.QWeight;
    }
    
    public void setQWeight(float QWeight) {
        this.QWeight = QWeight;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="questionsCreated")
    public Set<QuestionChoices> getQuestionChoiceses() {
        return this.questionChoiceses;
    }
    
    public void setQuestionChoiceses(Set<QuestionChoices> questionChoiceses) {
        this.questionChoiceses = questionChoiceses;
    }




}


